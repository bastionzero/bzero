// Code generated by mockery v2.12.3. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// IKeysplittingConfig is an autogenerated mock type for the IKeysplittingConfig type
type IKeysplittingConfig struct {
	mock.Mock
}

// GetIdpOrgId provides a mock function with given fields:
func (_m *IKeysplittingConfig) GetIdpOrgId() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetIdpProvider provides a mock function with given fields:
func (_m *IKeysplittingConfig) GetIdpProvider() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetPrivateKey provides a mock function with given fields:
func (_m *IKeysplittingConfig) GetPrivateKey() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetPublicKey provides a mock function with given fields:
func (_m *IKeysplittingConfig) GetPublicKey() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

type NewIKeysplittingConfigT interface {
	mock.TestingT
	Cleanup(func())
}

// NewIKeysplittingConfig creates a new instance of IKeysplittingConfig. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIKeysplittingConfig(t NewIKeysplittingConfigT) *IKeysplittingConfig {
	mock := &IKeysplittingConfig{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
